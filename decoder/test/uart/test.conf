test trekstor_ebr30_a
	protocol-decoder uart channel rx=1 option format=ascii option packet_idle_us=20
	input uart/trekstor_ebr30_a/trekstor_ebr30_a_uart.sr
	output uart annotation class rx-data match trekstor_rx.output
	output uart annotation class tx-data match trekstor_tx.output
	output uart annotation match trekstor.output
	output uart python match trekstor.python
	output uart binary class rx match trekstor_bin_rx.output
	output uart binary class tx match trekstor_bin_tx.output
	output uart binary class rxtx match trekstor_bin_rx.output

test hello_world_7o1_115200
	protocol-decoder uart channel tx=0 option baudrate=115200 option parity=odd option data_bits=7 option format=ascii
	input uart/hello_world/7o1/hello_world_7o1_115200.sr
	output uart annotation match hello_world_7o1_115200.output
	output uart python match hello_world_7o1_115200.python
	output uart binary class tx match hello_world_7o1_115200.bin_tx

# Intentionally cause parity errors.
test hello_world_7o1_115200_parity_err
	protocol-decoder uart channel tx=0 option baudrate=115200 option parity=even option data_bits=7 option format=ascii
	input uart/hello_world/7o1/hello_world_7o1_115200.sr
	output uart annotation match hello_world_7o1_115200_parity_err.output
	output uart python match hello_world_7o1_115200_parity_err.python
	output uart binary class tx match hello_world_7o1_115200_parity_err.bin_tx

test hello_world_7o1_115200_parity_ignore
	protocol-decoder uart channel tx=0 option baudrate=115200 option parity=ignore option data_bits=7 option format=ascii
	input uart/hello_world/7o1/hello_world_7o1_115200.sr
	output uart annotation match hello_world_7o1_115200_parity_ignore.output
	output uart python match hello_world_7o1_115200_parity_ignore.python
	output uart binary class tx match hello_world_7o1_115200_parity_ignore.bin_tx

test hello_world_7e1_115200
	protocol-decoder uart channel tx=0 option baudrate=115200 option parity=even option data_bits=7 option format=ascii
	input uart/hello_world/7e1/hello_world_7e1_115200.sr
	output uart annotation match hello_world_7e1_115200.output
	output uart python match hello_world_7e1_115200.python
	output uart binary class tx match hello_world_7e1_115200.bin_tx

test hello_world_8e1_115200
	protocol-decoder uart channel tx=0 option baudrate=115200 option parity=even option format=ascii
	input uart/hello_world/8e1/hello_world_8e1_115200.sr
	output uart annotation match hello_world_8e1_115200.output
	output uart python match hello_world_8e1_115200.python
	output uart binary class tx match hello_world_8e1_115200.bin_tx

test hello_world_8n1_1200
	protocol-decoder uart channel tx=0 option baudrate=1200 option format=ascii
	input uart/hello_world/8n1/hello_world_8n1_1200.sr
	output uart annotation match hello_world_8n1_1200.output
	output uart python match hello_world_8n1_1200.python
	output uart binary class tx match hello_world_8n1_1200.bin_tx

test hello_world_8n1_2400
	protocol-decoder uart channel tx=0 option baudrate=2400 option format=ascii
	input uart/hello_world/8n1/hello_world_8n1_2400.sr
	output uart annotation match hello_world_8n1_2400.output
	output uart python match hello_world_8n1_2400.python
	output uart binary class tx match hello_world_8n1_2400.bin_tx

test hello_world_8n1_4800
	protocol-decoder uart channel tx=0 option baudrate=4800 option format=ascii
	input uart/hello_world/8n1/hello_world_8n1_4800.sr
	output uart annotation match hello_world_8n1_4800.output
	output uart python match hello_world_8n1_4800.python
	output uart binary class tx match hello_world_8n1_4800.bin_tx

test hello_world_8n1_9600
	protocol-decoder uart channel tx=0 option baudrate=9600 option format=ascii
	input uart/hello_world/8n1/hello_world_8n1_9600.sr
	output uart annotation match hello_world_8n1_9600.output
	output uart python match hello_world_8n1_9600.python
	output uart binary class tx match hello_world_8n1_9600.bin_tx

test hello_world_8n1_19200
	protocol-decoder uart channel tx=0 option baudrate=19200 option format=ascii
	input uart/hello_world/8n1/hello_world_8n1_19200.sr
	output uart annotation match hello_world_8n1_19200.output
	output uart python match hello_world_8n1_19200.python
	output uart binary class tx match hello_world_8n1_19200.bin_tx

test hello_world_8n1_38400
	protocol-decoder uart channel tx=0 option baudrate=38400 option format=ascii
	input uart/hello_world/8n1/hello_world_8n1_38400.sr
	output uart annotation match hello_world_8n1_38400.output
	output uart python match hello_world_8n1_38400.python
	output uart binary class tx match hello_world_8n1_38400.bin_tx

test hello_world_8n1_57600
	protocol-decoder uart channel tx=0 option baudrate=57600 option format=ascii
	input uart/hello_world/8n1/hello_world_8n1_57600.sr
	output uart annotation match hello_world_8n1_57600.output
	output uart python match hello_world_8n1_57600.python
	output uart binary class tx match hello_world_8n1_57600.bin_tx

test hello_world_8n1_115200
	protocol-decoder uart channel tx=0 option baudrate=115200 option format=ascii
	input uart/hello_world/8n1/hello_world_8n1_115200.sr
	output uart annotation match hello_world_8n1_115200.output
	output uart python match hello_world_8n1_115200.python
	output uart binary class tx match hello_world_8n1_115200.bin_tx

test hello_world_8n1_230400
	protocol-decoder uart channel tx=0 option baudrate=230400 option format=ascii
	input uart/hello_world/8n1/hello_world_8n1_230400.sr
	output uart annotation match hello_world_8n1_230400.output
	output uart python match hello_world_8n1_230400.python
	output uart binary class tx match hello_world_8n1_230400.bin_tx

test hello_world_8n1_460800
	protocol-decoder uart channel tx=0 option baudrate=460800 option format=ascii
	input uart/hello_world/8n1/hello_world_8n1_460800.sr
	output uart annotation match hello_world_8n1_460800.output
	output uart python match hello_world_8n1_460800.python
	output uart binary class tx match hello_world_8n1_460800.bin_tx

test hello_world_8n1_921600
	protocol-decoder uart channel tx=0 option baudrate=921600 option format=ascii
	input uart/hello_world/8n1/hello_world_8n1_921600.sr
	output uart annotation match hello_world_8n1_921600.output
	output uart python match hello_world_8n1_921600.python
	output uart binary class tx match hello_world_8n1_921600.bin_tx

test hello_world_8o1_115200
	protocol-decoder uart channel tx=0 option baudrate=115200 option parity=odd option format=ascii
	input uart/hello_world/8o1/hello_world_8o1_115200.sr
	output uart annotation match hello_world_8o1_115200.output
	output uart python match hello_world_8o1_115200.python
	output uart binary class tx match hello_world_8o1_115200.bin_tx

test rxtx_overlapped
	protocol-decoder uart channel rx=3 channel tx=4 option format=hex option tx_packet_len=2 option rx_packet_len=5
	input uart/rxtx_overlapped/rxtx_overlapped.sr
	output uart annotation match rxtx_overlapped.output
	output uart python match rxtx_overlapped.python
	output uart binary class rx match rxtx_overlapped.bin_rx
	output uart binary class tx match rxtx_overlapped.bin_tx

test uart_count_19200_5n1_hex
	protocol-decoder uart channel tx=0 option baudrate=19200 option data_bits=5 option format=hex option tx_packet_len=16
	input uart/counter/uart_count_19200_5n1.sr
	output uart annotation match uart_count_19200_5n1_hex.output
	output uart python match uart_count_19200_5n1_packet.python
	output uart binary class tx match uart_count_19200_5n1.bin_tx

test uart_count_19200_5n1_ascii
	protocol-decoder uart channel tx=0 option baudrate=19200 option data_bits=5 option format=ascii
	input uart/counter/uart_count_19200_5n1.sr
	output uart annotation match uart_count_19200_5n1_ascii.output
	output uart python match uart_count_19200_5n1.python
	output uart binary class tx match uart_count_19200_5n1.bin_tx

test uart_count_19200_5n1_dec
	protocol-decoder uart channel tx=0 option baudrate=19200 option data_bits=5 option format=dec option tx_packet_len=16
	input uart/counter/uart_count_19200_5n1.sr
	output uart annotation match uart_count_19200_5n1_dec.output
	output uart python match uart_count_19200_5n1_packet.python
	output uart binary class tx match uart_count_19200_5n1.bin_tx

test uart_count_19200_5n1_oct
	protocol-decoder uart channel tx=0 option baudrate=19200 option data_bits=5 option format=oct
	input uart/counter/uart_count_19200_5n1.sr
	output uart annotation match uart_count_19200_5n1_oct.output
	output uart python match uart_count_19200_5n1.python
	output uart binary class tx match uart_count_19200_5n1.bin_tx

test uart_count_19200_5n1_bin
	protocol-decoder uart channel tx=0 option baudrate=19200 option data_bits=5 option format=bin
	input uart/counter/uart_count_19200_5n1.sr
	output uart annotation match uart_count_19200_5n1_bin.output
	output uart python match uart_count_19200_5n1.python
	output uart binary class tx match uart_count_19200_5n1.bin_tx

test uart_count_19200_6n1
	protocol-decoder uart channel tx=0 option baudrate=19200 option data_bits=6 option format=hex option tx_packet_len=16
	input uart/counter/uart_count_19200_6n1.sr
	output uart annotation match uart_count_19200_6n1_hex.output
	output uart python match uart_count_19200_6n1_packet.python
	output uart binary class tx match uart_count_19200_6n1.bin_tx

test uart_count_19200_6n1
	protocol-decoder uart channel tx=0 option baudrate=19200 option data_bits=6 option format=ascii
	input uart/counter/uart_count_19200_6n1.sr
	output uart annotation match uart_count_19200_6n1_ascii.output
	output uart python match uart_count_19200_6n1.python
	output uart binary class tx match uart_count_19200_6n1.bin_tx

test uart_count_19200_6n1
	protocol-decoder uart channel tx=0 option baudrate=19200 option data_bits=6 option format=dec option tx_packet_len=16
	input uart/counter/uart_count_19200_6n1.sr
	output uart annotation match uart_count_19200_6n1_dec.output
	output uart python match uart_count_19200_6n1_packet.python
	output uart binary class tx match uart_count_19200_6n1.bin_tx

test uart_count_19200_6n1
	protocol-decoder uart channel tx=0 option baudrate=19200 option data_bits=6 option format=oct
	input uart/counter/uart_count_19200_6n1.sr
	output uart annotation match uart_count_19200_6n1_oct.output
	output uart python match uart_count_19200_6n1.python
	output uart binary class tx match uart_count_19200_6n1.bin_tx

test uart_count_19200_6n1
	protocol-decoder uart channel tx=0 option baudrate=19200 option data_bits=6 option format=bin
	input uart/counter/uart_count_19200_6n1.sr
	output uart annotation match uart_count_19200_6n1_bin.output
	output uart python match uart_count_19200_6n1.python
	output uart binary class tx match uart_count_19200_6n1.bin_tx

test uart_count_19200_7n1
	protocol-decoder uart channel tx=0 option baudrate=19200 option data_bits=7 option format=hex option tx_packet_len=16
	input uart/counter/uart_count_19200_7n1.sr
	output uart annotation match uart_count_19200_7n1_hex.output
	output uart python match uart_count_19200_7n1_packet.python
	output uart binary class tx match uart_count_19200_7n1.bin_tx

test uart_count_19200_7n1
	protocol-decoder uart channel tx=0 option baudrate=19200 option data_bits=7 option format=ascii
	input uart/counter/uart_count_19200_7n1.sr
	output uart annotation match uart_count_19200_7n1_ascii.output
	output uart python match uart_count_19200_7n1.python
	output uart binary class tx match uart_count_19200_7n1.bin_tx

test uart_count_19200_7n1
	protocol-decoder uart channel tx=0 option baudrate=19200 option data_bits=7 option format=dec option tx_packet_len=16
	input uart/counter/uart_count_19200_7n1.sr
	output uart annotation match uart_count_19200_7n1_dec.output
	output uart python match uart_count_19200_7n1_packet.python
	output uart binary class tx match uart_count_19200_7n1.bin_tx

test uart_count_19200_7n1
	protocol-decoder uart channel tx=0 option baudrate=19200 option data_bits=7 option format=oct
	input uart/counter/uart_count_19200_7n1.sr
	output uart annotation match uart_count_19200_7n1_oct.output
	output uart python match uart_count_19200_7n1.python
	output uart binary class tx match uart_count_19200_7n1.bin_tx

test uart_count_19200_7n1
	protocol-decoder uart channel tx=0 option baudrate=19200 option data_bits=7 option format=bin
	input uart/counter/uart_count_19200_7n1.sr
	output uart annotation match uart_count_19200_7n1_bin.output
	output uart python match uart_count_19200_7n1.python
	output uart binary class tx match uart_count_19200_7n1.bin_tx

test uart_count_19200_8n1
	protocol-decoder uart channel tx=0 option baudrate=19200 option data_bits=8 option format=hex option tx_packet_len=16
	input uart/counter/uart_count_19200_8n1.sr
	output uart annotation match uart_count_19200_8n1_hex.output
	output uart python match uart_count_19200_8n1_packet.python
	output uart binary class tx match uart_count_19200_8n1.bin_tx

test uart_count_19200_8n1
	protocol-decoder uart channel tx=0 option baudrate=19200 option data_bits=8 option format=ascii option tx_packet_len=16
	input uart/counter/uart_count_19200_8n1.sr
	output uart annotation match uart_count_19200_8n1_ascii.output
	output uart python match uart_count_19200_8n1_packet.python
	output uart binary class tx match uart_count_19200_8n1.bin_tx

test uart_count_19200_8n1
	protocol-decoder uart channel tx=0 option baudrate=19200 option data_bits=8 option format=dec option tx_packet_len=16
	input uart/counter/uart_count_19200_8n1.sr
	output uart annotation match uart_count_19200_8n1_dec.output
	output uart python match uart_count_19200_8n1_packet.python
	output uart binary class tx match uart_count_19200_8n1.bin_tx

test uart_count_19200_8n1
	protocol-decoder uart channel tx=0 option baudrate=19200 option data_bits=8 option format=oct option tx_packet_len=16
	input uart/counter/uart_count_19200_8n1.sr
	output uart annotation match uart_count_19200_8n1_oct.output
	output uart python match uart_count_19200_8n1_packet.python
	output uart binary class tx match uart_count_19200_8n1.bin_tx

test uart_count_19200_8n1
	protocol-decoder uart channel tx=0 option baudrate=19200 option data_bits=8 option format=bin option tx_packet_len=16
	input uart/counter/uart_count_19200_8n1.sr
	output uart annotation match uart_count_19200_8n1_bin.output
	output uart python match uart_count_19200_8n1_packet.python
	output uart binary class tx match uart_count_19200_8n1.bin_tx

test uart_count_19200_9n1
	protocol-decoder uart channel tx=0 option baudrate=19200 option data_bits=9 option format=hex option tx_packet_len=16
	input uart/counter/uart_count_19200_9n1.sr
	output uart annotation match uart_count_19200_9n1_hex.output
	output uart python match uart_count_19200_9n1_packet.python
	output uart binary class tx match uart_count_19200_9n1.bin_tx

test uart_count_19200_9n1
	protocol-decoder uart channel tx=0 option baudrate=19200 option data_bits=9 option format=ascii
	input uart/counter/uart_count_19200_9n1.sr
	output uart annotation match uart_count_19200_9n1_ascii.output
	output uart python match uart_count_19200_9n1.python
	output uart binary class tx match uart_count_19200_9n1.bin_tx

test uart_count_19200_9n1
	protocol-decoder uart channel tx=0 option baudrate=19200 option data_bits=9 option format=dec option tx_packet_len=16
	input uart/counter/uart_count_19200_9n1.sr
	output uart annotation match uart_count_19200_9n1_dec.output
	output uart python match uart_count_19200_9n1_packet.python
	output uart binary class tx match uart_count_19200_9n1.bin_tx

test uart_count_19200_9n1
	protocol-decoder uart channel tx=0 option baudrate=19200 option data_bits=9 option format=oct
	input uart/counter/uart_count_19200_9n1.sr
	output uart annotation match uart_count_19200_9n1_oct.output
	output uart python match uart_count_19200_9n1.python
	output uart binary class tx match uart_count_19200_9n1.bin_tx

test uart_count_19200_9n1
	protocol-decoder uart channel tx=0 option baudrate=19200 option data_bits=9 option format=bin
	input uart/counter/uart_count_19200_9n1.sr
	output uart annotation match uart_count_19200_9n1_bin.output
	output uart python match uart_count_19200_9n1.python
	output uart binary class tx match uart_count_19200_9n1.bin_tx

test cyrustek_es51978
	protocol-decoder uart channel rx=0 option baudrate=2400 option data_bits=7 option parity=odd option format=ascii option rx_packet_delim=10
	input uart/cyrustek_es51978/es51978.sr
	output uart annotation match cyrustek_es51978.output
	output uart python match cyrustek_es51978.python
	output uart binary class rx match cyrustek_es51978.bin_rx

test mtk3339_8n1_9600
	protocol-decoder uart channel tx=0 option baudrate=9600 option format=ascii option tx_packet_delim=10
	input uart/gps/mtk3339/mtk3339_8n1_9600.sr
	output uart annotation match mtk3339_8n1_9600.output
	output uart python match mtk3339_8n1_9600.python
	output uart binary class tx match mtk3339_8n1_9600.bin_tx

test kern_ew_6200-2nm_tare
	protocol-decoder uart channel rx=0 option baudrate=1200 option format=ascii option rx_packet_delim=10
	input uart/kern_ew_6200-2nm/kern_ew_6200-2nm_tare.sr
	output uart annotation match kern_ew_6200-2nm_tare.output
	output uart python match kern_ew_6200-2nm_tare.python
	output uart binary class rx match kern_ew_6200-2nm_tare.bin_rx

test max3232e_hello_world_57600_8n1
	protocol-decoder uart channel rx=1 channel tx=2 option baudrate=57600 option format=ascii option invert_rx=yes option rx_packet_delim=10 option tx_packet_delim=10
	input uart/maxim_max3232e/max3232e_hello_world_57600_8n1.sr
	output uart annotation match max3232e_hello_world_57600_8n1.output
	output uart python match max3232e_hello_world_57600_8n1.python
	output uart binary class rx match max3232e_hello_world_57600_8n1.bin_rx
	output uart binary class tx match max3232e_hello_world_57600_8n1.bin_tx

test grbl_cnc_1
	protocol-decoder uart channel rx=3 channel tx=2 option format=ascii option rx_packet_delim=10 option tx_packet_delim=10
	input stepper_motor/grbl_cnc/grbl_cnc_1.sr
	output uart annotation class tx-packet match grbl_cnc_1_tx_packet.output
	output uart annotation class rx-packet match grbl_cnc_1_rx_packet.output

test grbl_cnc_2
	protocol-decoder uart channel rx=3 channel tx=2 option format=ascii option rx_packet_delim=10 option tx_packet_delim=10
	input stepper_motor/grbl_cnc/grbl_cnc_2.sr
	output uart annotation class tx-packet match grbl_cnc_2_tx_packet.output
	output uart annotation class rx-packet match grbl_cnc_2_rx_packet.output

test grbl_cnc_3
	protocol-decoder uart channel tx=2 option format=ascii option tx_packet_delim=10
	input stepper_motor/grbl_cnc/grbl_cnc_3.sr
	output uart annotation class tx-packet match grbl_cnc_3_tx_packet.output

test exception_samplerate
	protocol-decoder uart
	input misc/no-samplerate.sr
	output uart exception match SamplerateError
